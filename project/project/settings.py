"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

import logging
logger = logging.getLogger("django")


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=(v1w8u+k1*+ijm0-#@$f!54d!wue8zne31(l-mrk2s-9&!+4d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.sites',
    'django.contrib.flatpages',
    'news.apps.NewsConfig',
    'django_filters',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.yandex',

    'django_apscheduler',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    'django.middleware.locale.LocaleMiddleware',

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'news.middlewares.TimezoneMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'context_processors.get_group_list',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ru-ru'
TIME_ZONE = 'Europe/Moscow'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SITE_ID = 1

SITE_URL = 'http://127.0.0.1:8000'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

LOGIN_REDIRECT_URL = '/posts'
LOGOUT_REDIRECT_URL = '/posts'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'username'
ACCOUNT_EMAIL_VERIFICATION = 'none'

ACCOUNT_FORMS = {'signup': 'accounts.forms.CustomSignupForm'}

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = "capitas.kolesnikov"
EMAIL_HOST_PASSWORD = "qsrhucnxsjkvcjvs"
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = "capitas.kolesnikov@yandex.ru"

APSCHEDULER_DATETIME_FORMAT = 'N j, Y, f:s a'

APSCHEDULER_RUN_NOW_TIMEOUT = 25

CELERY_BROKER_URL = 'redis://:cU4hOuAoESkSrCLtjFes9Z9R2MUEwnnH@redis-17040.c259.us-central1-2.gce.cloud.redislabs.com:17040/#12118031'
CELERY_RESULT_BACKEND = 'redis://:cU4hOuAoESkSrCLtjFes9Z9R2MUEwnnH@redis-17040.c259.us-central1-2.gce.cloud.redislabs.com:17040/#12118031'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# LOGGING = {
#     'version': 1,
#     'disable_existing_logger': False,
#
#     'loggers': {
#         'django': {
#             'handlers': ['console_debug',
#                          'console_warning',
#                          'console_error',
#                          'log_file_general',
#                          ],
#             'level': 'DEBUG',
#         },
#         'django.request': {
#             'handlers': ['log_file_errors',
#                          'mail_admins',],
#             'level': 'ERROR',
#             'propagate': False,
#         },
#         'django.server': {
#             'handlers': ['log_file_errors',
#                          'mail_admins',],
#             'level': 'ERROR',
#             'propagate': False,
#         },
#         'django.template': {
#             'handlers': ['log_file_errors',],
#             'level': 'ERROR',
#             'propagate': False,
#         },
#         'django.db.backends': {
#             'handlers': ['log_file_errors',],
#             'level': 'ERROR',
#             'propagate': False,
#         },
#         'django.security': {
#             'handlers': ['log_file_security',],
#             'level': 'INFO',
#             'propagate': False,
#         },
#     },
#     'handlers': {
#         'console_debug': {
#             'class': 'logging.StreamHandler',
#             'level' : 'DEBUG',
#             'formatter': 'console_debug_formatter',
#             'filters': ['require_debug_true',]
#         },
#         'console_warning': {
#             'class': 'logging.StreamHandler',
#             'level': 'WARNING',
#             'formatter': 'console_warning_formatter',
#             'filters': ['require_debug_true',]
#         },
#         'console_error': {
#             'class': 'logging.StreamHandler',
#             'level': 'ERROR',
#             'formatter': 'console_error_formatter',
#             'filters': ['require_debug_true',]
#         },
#         'log_file_general': {
#             'level': 'INFO',
#             'class': 'logging.FileHandler',
#             'filename': 'general.log',
#             'formatter': 'log_file_general_formatter',
#             'filters': ['require_debug_false',],
#         },
#         'log_file_errors': {
#             'level': 'ERROR',
#             'class': 'logging.FileHandler',
#             'filename': 'errors.log',
#             'formatter': 'log_file_errors_formatter',
#         },
#         'log_file_security': {
#             'level': 'INFO',
#             'class': 'logging.FileHandler',
#             'filename': 'security.log',
#             'formatter': 'log_file_security_formatter',
#         },
#         'mail_admins': {
#             'level': 'ERROR',
#             'class': 'django.utils.log.AdminEmailHandler',
#             'formatter': 'mail_admins_formatter',
#             'filters': ['require_debug_false',],
#         },
#     },
#     'formatters': {
#         'console_debug_formatter': {
#             'format': '{asctime} {levelname} {message}',
#             'datefmt': '%H:%M:%S',
#             'style': '{',
#         },
#         'console_warning_formatter': {
#             'format': '{asctime} {levelname} {message} {pathname}',
#             'datefmt': '%H:%M:%S',
#             'style': '{',
#         },
#         'console_error_formatter': {
#             'format': '{asctime} {levelname} {message} {pathname} {exc_info}',
#             'datefmt': '%H:%M:%S',
#             'style': '{',
#         },
#         'log_file_general_formatter': {
#             'format': '{asctime} {levelname} {module} {message}',
#             'datefmt': '%H:%M:%S',
#             'style': '{',
#         },
#         'log_file_errors_formatter': {
#             'format': '{asctime} {levelname} {message} {pathname} {exc_info}',
#             'datefmt': '%H:%M:%S',
#             'style': '{',
#         },
#         'log_file_security_formatter': {
#             'format': '{asctime} {levelname} {module} {message}',
#             'datefmt': '%H:%M:%S',
#             'style': '{',
#         },
#         'mail_admins_formatter': {
#             'format': '{asctime} {levelname} {message} {pathname}',
#             'datefmt': '%H:%M:%S',
#             'style': '{',
#         },
#     },
#     'filters': {
#         'require_debug_true': {
#             '()': 'django.utils.log.RequireDebugTrue',
#         },
#         'require_debug_false': {
#             '()': 'django.utils.log.RequireDebugFalse',
#         },
#     },
# }

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale')
]

LANGUAGES = [
    ('en-us', 'English'),
    ('ru', 'Русский'),
]